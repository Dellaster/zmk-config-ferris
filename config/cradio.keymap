/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/ {
    //    combos {
    //        compatible = "zmk,combos";
    //        combo_esc {
    //            timeout-ms = <50>;
    //            key-positions = <0 1>;
    //            bindings = <&kp ESC>;
    //        };
    //        combo_tab {
    //            timeout-ms = <50>;
    //            key-positions = <10 11>;
    //            bindings = <&kp TAB>;
    //        };
    //        combo_ralt {
    //            timeout-ms = <50>;
    //            key-positions = <17 16>;
    //            bindings = <&kp RALT>;
    //        };
    //        combo_lalt {
    //            timeout-ms = <50>;
    //            key-positions = <11 12>;
    //            bindings = <&kp LALT>;
    //        };
    //        combo_lgui {
    //            timeout-ms = <50>;
    //            key-positions = <12 13>;
    //            bindings = <&kp LGUI>;
    //        };
    //
    //        combo_rgui {
    //            timeout-ms = <50>;
    //            key-positions = <17 18>;
    //            bindings = <&kp RGUI>;
    //       };
    //    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp P  &kp L  &kp D  &kp G            &kp V      &kp COMMA   &kp F      &kp O  &kp SQT    &kp Y
&kp N  &kp R  &kp T  &kp S            &kp B      &kp PERIOD  &kp U      &kp A  &kp E      &kp I
&kp Z  &kp X  &kp M  &kp C            &kp W      &kp K       &kp H      &kp Q  &kp MINUS  &kp J
                     &lt 1 BACKSPACE  &kp TAB    &kp SPACE   &lt 2 RET
            >;
        };

        left_layer {
            bindings = <
&kp ESCAPE  &none         &none          &none      &none     &kp ASTERISK  &mt F1 NUMBER_1  &mt F2 NUMBER_2  &mt F3 NUMBER_3  &kp F10
&sk LCTRL   &sk LC(LALT)  &sk LEFT_META  &sk LSHFT  &none     &kp PLUS      &mt F4 NUMBER_4  &mt F5 N5        &mt F6 NUMBER_6  &kp F11
&none       &none         &none          &none      &none     &kp SLASH     &mt F7 N7        &mt F8 N8        &mt F9 N9        &kp F12
                                         &mo 1      &trans    &trans        &kp N0
            >;
        };

        right_layer {
            bindings = <
&kp ESCAPE  &kp AT_SIGN    &kp HASH       &kp DLLR               &kp PERCENT       &none   &none      &none      &none     &none
&kp HASH    &kp QMARK      &kp FSLH       &kp EXCL               &kp QUESTION      &none   &sk RSHFT  &sk RMETA  &sk RALT  &sk RCTRL
&kp TAB     &kp SEMICOLON  &mt RPAR LPAR  &mt RBKT LEFT_BRACKET  &mt BSLH SLASH    &none   &none      &none      &none     &none
                                          &mo 1                  &trans            &trans  &mo 2
            >;
        };

        tri_layer {
            bindings = <
&kp ESCAPE  &none       &none       &none         &none           &kp HOME     &trans                &trans        &trans  &sys_reset
&none       &none       &none       &none         &none           &kp PAGE_UP  &kp C_BRI_UP          &kp K_VOL_UP  &none   &trans
&bt BT_CLR  &bt BT_NXT  &bt BT_PRV  &bt BT_SEL 0  &bt BT_SEL 1    &kp PG_DN    &kp C_BRIGHTNESS_DEC  &kp K_VOL_DN  &trans  &bootloader
                                    &trans        &trans          &trans       &trans
            >;
        };
    };
};
